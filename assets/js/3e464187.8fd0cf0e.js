"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([[3982],{3905:(e,n,a)=>{a.d(n,{Zo:()=>m,kt:()=>f});var t=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=t.createContext({}),c=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},m=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=c(a),d=o,f=s["".concat(p,".").concat(d)]||s[d]||u[d]||r;return a?t.createElement(f,i(i({ref:n},m),{},{components:a})):t.createElement(f,i({ref:n},m))}));function f(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2713:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=a(7462),o=(a(7294),a(3905));const r={sidebar_position:2},i=void 0,l={unversionedId:"PYTHON/Funciones",id:"PYTHON/Funciones",title:"Funciones",description:"Python",source:"@site/docs/PYTHON/Funciones.md",sourceDirName:"PYTHON",slug:"/PYTHON/Funciones",permalink:"/mydoc/docs/PYTHON/Funciones",draft:!1,editUrl:"https://github.com/juamaya/mydoc/docs/PYTHON/Funciones.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/mydoc/docs/PYTHON/Intro"},next:{title:"Bucles",permalink:"/mydoc/docs/PYTHON/Bucles"}},p={},c=[{value:"Funci\xf3n sin par\xe1metros o retorno de valores",id:"funci\xf3n-sin-par\xe1metros-o-retorno-de-valores",level:3},{value:"Funci\xf3n con un par\xe1metro",id:"funci\xf3n-con-un-par\xe1metro",level:3},{value:"Funci\xf3n con m\xfaltiples par\xe1metros con una sentencia de retorno",id:"funci\xf3n-con-m\xfaltiples-par\xe1metros-con-una-sentencia-de-retorno",level:3},{value:"Funcion  Fibonacci",id:"funcion--fibonacci",level:3},{value:"Funcion lambda",id:"funcion-lambda",level:3}],m={toc:c},s="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(s,(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Python",src:a(7790).Z,width:"640",height:"306"})),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"funci\xf3n-sin-par\xe1metros-o-retorno-de-valores"},"Funci\xf3n sin par\xe1metros o retorno de valores"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def diHola():\n  print("Hello!")\n')),(0,o.kt)("p",{parentName:"admonition"}," llamada a la funci\xf3n, 'Hello!' se muestra en la consola"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"diHola() \n"))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"funci\xf3n-con-un-par\xe1metro"},"Funci\xf3n con un par\xe1metro"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def holaConNombre(name):\n  print("Hello " + name + "!")\n')),(0,o.kt)("p",{parentName:"admonition"},"llamada a la funci\xf3n, 'Hello Ada!' se muestra en la consola"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'holaConNombre("Ada") \n'))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"funci\xf3n-con-m\xfaltiples-par\xe1metros-con-una-sentencia-de-retorno"},"Funci\xf3n con m\xfaltiples par\xe1metros con una sentencia de retorno"),(0,o.kt)("admonition",{title:"funcion que multiplica dos valores.",type:"info"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def multiplica(val1, val2):\n  return val1 * val2\n")),(0,o.kt)("p",{parentName:"admonition"},"llamada a la funci\xf3n y la guarda en la variable ",(0,o.kt)("strong",{parentName:"p"},"resultado")," y luego  muestra 15 en la consola "),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"resultado = multiplica(3, 5)\nprint( resultado )\n")),(0,o.kt)("p",{parentName:"admonition"},"llamada a la funci\xf3n y la guarda en la variable ",(0,o.kt)("strong",{parentName:"p"},"resultado_1")," y luego  muestra 75 en la consola "),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"resultado_1 = multiplica(5, 15)\nprint( resultado_1 )\n"))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"funcion--fibonacci"},"Funcion  Fibonacci"),(0,o.kt)("admonition",{title:"funcion  Fibonacci series up to n",type:"info"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"}," # This is a comment\n def fib(n):\n     a, b = 0, 1\n     while a < n:\n         print(a, end=' ')\n         a, b = b, a+b\n     print()\n")),(0,o.kt)("p",{parentName:"admonition"}," llamada a la funci\xf3n "),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"fib(1000)\n")),(0,o.kt)("p",{parentName:"admonition"}," muestra la serie Fibonacci hasta el numero pasado como parametro."),(0,o.kt)("p",{parentName:"admonition"},"0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"funcion-lambda"},"Funcion lambda"),(0,o.kt)("admonition",{title:"funcion  lambda",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Por ejemplo, puedes escribir una funci\xf3n lambda que duplique sus argumentos"),(0,o.kt)("p",{parentName:"admonition"}," ",(0,o.kt)("inlineCode",{parentName:"p"},"lambda x: x * 2"),"   y usarla con la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"map "),"para duplicar todos los elementos de una lista:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"\nmi_lista = [1, 2, 3, 4, 5, 6]\nlista_nueva = list(map(lambda x: x * 2, mi_lista))\nprint(lista_nueva)  # [2, 4, 6, 8, 10, 12]\n\n")),(0,o.kt)("p",{parentName:"admonition"},"As\xed luce sin una funci\xf3n lambda"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def doble(x):\n  return x*2\n  \nmi_lista = [1, 2, 3, 4, 5, 6]\nlista_nueva = list(map(doble, mi_lista))\nprint(lista_nueva) # [2, 4, 6, 8, 10, 12]\n"))),(0,o.kt)("hr",null),(0,o.kt)("admonition",{title:"funcion  lambda",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Tambi\xe9n puedes escribir una funci\xf3n lambda que revise si un n\xfamero es positivo,"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"lambda x: x > 0"),",  y usarla con la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"filter")," para crear una lista de n\xfameros positivos."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# This is a comment\nmi_lista = [18, -3, 5, 0, -1, 12]\nlista_nueva = list(filter(lambda x: x > 0, mi_lista))\nprint(lista_nueva) # [18, 5, 12]\n\n"))),(0,o.kt)("hr",null))}u.isMDXComponent=!0},7790:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Pythonlogo-ed4c283861988567c7dc09d2611e6942.jpg"}}]);